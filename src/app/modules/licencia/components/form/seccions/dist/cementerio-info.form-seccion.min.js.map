{"version":3,"sources":["cementerio-info.form-seccion.tsx"],"names":["react_1","require","form_1","radio_1","input_1","divider_1","select_component_1","dominio_service_1","exports","CementerioInfoFormSeccion","props","form","tipoLicencia","obj","_d","useState","isMunicipio","setMunicipio","_e","l_municipios","setLMunicipios","_f","_g","l_departamentos_colombia","l_cementerios","l_paises","setListas","getListas","useCallback","__awaiter","Promise","all","dominioService","get_departamentos_colombia","get_cementerios_bogota","get_type","ETipoDominio","Pais","resp","_a","sent","useEffect","onChangeDepartamento","value","resetFields","get_municipios_by_departamento","onChangeMunicipio","departament","getFieldValue","municipio","lugarCementerio","isLugar","_h","lugar","setLugar","createElement","Fragment","orientation","Item","className","label","name","initialValue","_c","_b","rules","required","Group","onChange","e","target","_lugar","cementerioDepartamento","SelectComponent","options","filter","i","descripcion","optionPropkey","optionPropLabel","cementerioMunicipio","otro","allowClear","placeholder","autoComplete","cementerioPais","cementerioCiudad","cementerioBogota","renderForm","KeysForm"],"mappings":"y7CAAA,IAAAA,QAAAC,QAAA,SAGAC,OAAAD,QAAA,gBACAE,QAAAF,QAAA,iBACAG,QAAAH,QAAA,iBACAI,UAAAJ,QAAA,mBAMAK,mBAAAL,QAAA,iDAGAM,kBAAAN,QAAA,gCAQaO,QAAAC,0BAAiE,SAACC,aACrEC,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,aACNC,EAAAH,EAAAG,IAGFC,EAAAd,QAAAe,SAAA,+BAACC,EAAAF,EAAA,GAAaG,EAAAH,EAAA,GAKdI,EAAAlB,QAAAe,SAAA,IAACI,EAAAD,EAAA,GAAcE,EAAAF,EAAA,GACfG,EAAArB,QAAAe,SAAA,CAAA,GAAA,GAAA,KAACO,EAAAD,EAAA,GAACE,EAAAD,EAAA,GAA0BE,EAAAF,EAAA,GAAeG,EAAAH,EAAA,GAAWI,EAAAL,EAAA,GAItDM,EAAY3B,QAAA4B,YAChB,WAAA,OAAAC,eAAA,OAAA,OAAA,EAAA,4EACe,MAAA,CAAA,EAAMC,QAAQC,IAAI,CAC7BxB,kBAAAyB,eAAeC,6BACf1B,kBAAAyB,eAAeE,yBACf3B,kBAAAyB,eAAeG,SAAS5B,kBAAA6B,aAAaC,uBAHjCC,EAAOC,EAAAC,OAKbd,EAAUY,aAGZ,IAGFtC,QAAAyC,UAAU,WACRd,KAEC,IAmB0B,SAAvBe,EAA8BC,GAAa,OAAAd,eAAA,OAAA,OAAA,EAAA,4EAElC,OADblB,EAAKiC,YAAY,CAAC,wBACL,CAAA,EAAMrC,kBAAAyB,eAAea,+BAA+BF,kBAA3DL,EAAOC,EAAAC,OACbpB,EAAekB,YAGS,SAApBQ,EAA2BH,GAAa,OAAAd,eAAA,OAAA,OAAA,EAAA,4DACtCkB,EAAcpC,EAAKqC,cAAc,0BAEvC/B,EAAa,CACX8B,YAAaA,EACbE,UAAWN,YA1Bf,IAIMO,EAAqB,QAANX,EAAG1B,SAAG,IAAA0B,OAAA,EAAAA,EAAEY,UAEvBC,EAAApD,QAAAe,SAAAmC,GAACG,EAAAD,EAAA,GAAOE,EAAAF,EAAA,GA+Fd,OACEpD,QAAA,QAAAuD,cAAAvD,QAAA,QAAAwD,SAAA,KACExD,QAAA,QAAAuD,cAAClD,UAAA,QAAO,CAACoD,YAAY,+CAA4C7C,GAEjEZ,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CACRC,UAAU,OACVC,MAAM,uBACNC,KAAK,kBACLC,cAAYC,EAAK,QAALC,EAAEnD,SAAG,IAAAmD,OAAA,EAAAA,EAAEb,UAAOY,MAAAA,EAAAA,EAAM,oBAChCE,MAAO,CAAC,CAAEC,UAAU,KAEpBlE,QAAA,QAAAuD,cAACpD,QAAA,QAAMgE,MAAK,CAACC,SAvGa,SAACC,GAC/B1D,EAAKiC,YAAY,CAAC,mBAAoB,yBAA0B,sBAAuB,iBAAkB,qBACzGxB,EAAe,IACfkC,EAASe,EAAEC,OAAO3B,SAqGZ3C,QAAA,QAAAuD,cAACpD,QAAA,QAAK,CAACwC,MAAM,oBAAkB,oBAC/B3C,QAAA,QAAAuD,cAAA,KAAA,MACAvD,QAAA,QAAAuD,cAACpD,QAAA,QAAK,CAACwC,MAAM,mBAAiB,mBAC9B3C,QAAA,QAAAuD,cAAA,KAAA,MACAvD,QAAA,QAAAuD,cAACpD,QAAA,QAAK,CAACwC,MAAM,kBAAgB,oBArFlB,SAAC4B,mBAClB,OAAQA,GACN,IAAK,kBACH,OACEvE,QAAA,QAAAuD,cAAA,MAAA,CAAKI,UAAU,eACb3D,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CAACE,MAAM,2BAA2BC,KAAK,yBAAyBI,MAAO,CAAC,CAAEC,UAAU,IAC5FJ,aAAiB,QAALvB,EAAE1B,SAAG,IAAA0B,OAAA,EAAAA,EAAEiC,wBACnBxE,QAAA,QAAAuD,cAACjD,mBAAAmE,gBAAe,CACdC,QAASnD,EAAyBoD,OAAO,SAACC,GAAM,MAAkB,gBAAlBA,EAAEC,cAClDC,cAAc,cACdC,gBAAgB,cAChBX,SAAU1B,KAGd1C,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CAACE,MAAM,YAAYC,KAAK,sBAChCC,aAAiB,QAALE,EAAEnD,SAAG,IAAAmD,OAAA,EAAAA,EAAEgB,oBACnBf,MAAO,CAAC,CAAEC,UAAU,KACpBlE,QAAA,QAAAuD,cAACjD,mBAAAmE,gBAAe,CACdC,QAASvD,EACT2D,cAAc,cACdV,SAAUtB,EACViC,gBAAgB,iBApDT,yCAuDV/D,EAAY+B,aAxDV,yCAwD0C/B,EAAYiC,WACvDjD,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CAACE,MAAM,aAAaC,KAAK,OAAOI,MAAO,CAAC,CAAEC,UAAU,IAC5DJ,aAAiB,QAALC,EAAElD,SAAG,IAAAkD,OAAA,EAAAA,EAAEkB,MAEnBjF,QAAA,QAAAuD,cAACnD,QAAA,QAAK,CAAC8E,YAAU,EAACC,YAAY,aAAaC,aAAa,UAMlE,IAAK,iBACH,OACEpF,QAAA,QAAAuD,cAAA,MAAA,CAAKI,UAAU,eACb3D,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CAACE,MAAM,OAAOC,KAAK,iBAAiBI,MAAO,CAAC,CAAEC,UAAU,IAChEJ,aAAiB,QAALhD,EAAED,SAAG,IAAAC,OAAA,EAAAA,EAAEuE,gBAEnBrF,QAAA,QAAAuD,cAACjD,mBAAAmE,gBAAe,CACdC,QAASjD,EAASkD,OAAO,SAACC,GAAM,MAAkB,aAAlBA,EAAEC,cAClCC,cAAc,gBACdC,gBAAgB,iBAGpB/E,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CAACE,MAAM,SAASC,KAAK,mBAC7BC,aAAiB,QAAL5C,EAAEL,SAAG,IAAAK,OAAA,EAAAA,EAAEoE,iBACnBrB,MAAO,CAAC,CAAEC,UAAU,KACpBlE,QAAA,QAAAuD,cAACnD,QAAA,QAAK,CAAC8E,YAAU,EAACC,YAAY,SAASC,aAAa,UAK5D,QACE,OACEpF,QAAA,QAAAuD,cAACrD,OAAA,QAAKwD,KAAI,CACRC,UAAU,cACVC,MAAM,4BACNC,KAAK,mBACLC,aAAiB,QAALzC,EAAER,SAAG,IAAAQ,OAAA,EAAAA,EAAEkE,iBACnBtB,MAAO,CAAC,CAAEC,UAAU,KAEpBlE,QAAA,QAAAuD,cAACjD,mBAAAmE,gBAAe,CAACC,QAASlD,EAAesD,cAAc,UAAUC,gBAAgB,cA0BtFS,CAAWnC,KAKL7C,QAAAiF,SAAW,CACtB,kBACA,mBACA,yBACA,sBACA,iBACA","file":"cementerio-info.form-seccion.min.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\n// Antd\r\nimport Form, { FormInstance } from 'antd/es/form';\r\nimport Radio, { RadioChangeEvent } from 'antd/es/radio';\r\nimport Input from 'antd/es/input';\r\nimport Divider from 'antd/es/divider';\r\n\r\n// Utilidades\r\nimport { ITipoLicencia } from 'app/shared/utils/types.util';\r\n\r\n// Componentes\r\nimport { SelectComponent } from 'app/shared/components/inputs/select.component';\r\n\r\n// Servicios\r\nimport { dominioService, ETipoDominio, IDepartamento, IMunicipio, IDominio, ICementerio } from 'app/services/dominio.service';\r\nimport { validateClaimsRequest } from 'msal/lib-commonjs/AuthenticationParameters';\r\n\r\ninterface municiopioDepartament {\r\n  municipio: string;\r\n  departament: string;\r\n}\r\n\r\nexport const CementerioInfoFormSeccion: React.FC<ICementerioInfoProps<any>> = (props) => {\r\n  const { form, tipoLicencia } = props;\r\n  const { obj } = props;\r\n  //#region Listados\r\n\r\n  const [isMunicipio, setMunicipio] = useState<municiopioDepartament>({\r\n    municipio: '',\r\n    departament: ''\r\n  });\r\n\r\n  const [l_municipios, setLMunicipios] = useState<IMunicipio[]>([]);\r\n  const [[l_departamentos_colombia, l_cementerios, l_paises], setListas] = useState<[IDepartamento[], ICementerio[], IDominio[]]>(\r\n    [[], [], []]\r\n  );\r\n\r\n  const getListas = useCallback(\r\n    async () => {\r\n      const resp = await Promise.all([\r\n        dominioService.get_departamentos_colombia(),\r\n        dominioService.get_cementerios_bogota(),\r\n        dominioService.get_type(ETipoDominio.Pais)\r\n      ]);\r\n      setListas(resp);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getListas();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //#endregion\r\n  //#region Acciones del formulario\r\n  const cota = 'b5c40416-db96-4d1d-a5bd-da0ce61930e7';\r\n  const cundinamarca = '1029c7b3-e8c7-46e6-8275-3e568e06e03c';\r\n\r\n\r\n  const lugarCementerio = obj?.isLugar();\r\n\r\n  const [lugar, setLugar] = useState<TypeLugarCementerio>(lugarCementerio);\r\n\r\n\r\n  const onChangeLugarCementerio = (e: RadioChangeEvent) => {\r\n    form.resetFields(['cementerioBogota', 'cementerioDepartamento', 'cementerioMunicipio', 'cementerioPais', 'cementerioCiudad']);\r\n    setLMunicipios([]);\r\n    setLugar(e.target.value);\r\n  };\r\n\r\n  const onChangeDepartamento = async (value: string) => {\r\n    form.resetFields(['cementerioMunicipio']);\r\n    const resp = await dominioService.get_municipios_by_departamento(value);\r\n    setLMunicipios(resp);\r\n  };\r\n\r\n  const onChangeMunicipio = async (value: string) => {\r\n    const departament = form.getFieldValue('cementerioDepartamento');\r\n\r\n    setMunicipio({\r\n      departament: departament,\r\n      municipio: value\r\n    });\r\n  };\r\n\r\n  //#endregion\r\n\r\n  const renderForm = (_lugar: TypeLugarCementerio) => {\r\n    switch (_lugar) {\r\n      case 'Fuera de Bogotá':\r\n        return (\r\n          <div className='fadeInRight'>\r\n            <Form.Item label='Departamento de Colombia' name='cementerioDepartamento' rules={[{ required: true }]}\r\n              initialValue={obj?.cementerioDepartamento}>\r\n              <SelectComponent\r\n                options={l_departamentos_colombia.filter((i) => i.descripcion !== 'BOGOTÁ D.C.')}\r\n                optionPropkey='descripcion'\r\n                optionPropLabel='descripcion'\r\n                onChange={onChangeDepartamento}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label='Municipio' name='cementerioMunicipio'\r\n              initialValue={obj?.cementerioMunicipio}\r\n              rules={[{ required: true }]}>\r\n              <SelectComponent\r\n                options={l_municipios}\r\n                optionPropkey='descripcion'\r\n                onChange={onChangeMunicipio}\r\n                optionPropLabel='descripcion'\r\n              />\r\n            </Form.Item>\r\n            {isMunicipio.departament === cundinamarca && isMunicipio.municipio === cota && (\r\n              <Form.Item label='Otro sitio' name='otro' rules={[{ required: true }]}\r\n                initialValue={obj?.otro}\r\n              >\r\n                <Input allowClear placeholder='Otro Sitio' autoComplete='off' />\r\n              </Form.Item>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'Fuera del País':\r\n        return (\r\n          <div className='fadeInRight'>\r\n            <Form.Item label='País' name='cementerioPais' rules={[{ required: true }]}\r\n              initialValue={obj?.cementerioPais}\r\n            >\r\n              <SelectComponent\r\n                options={l_paises.filter((i) => i.descripcion !== 'Colombia')}\r\n                optionPropkey='descripcion  '\r\n                optionPropLabel='descripcion'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label='Ciudad' name='cementerioCiudad'\r\n              initialValue={obj?.cementerioCiudad}\r\n              rules={[{ required: true }]}>\r\n              <Input allowClear placeholder='Ciudad' autoComplete='off' />\r\n            </Form.Item>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <Form.Item\r\n            className='fadeInRight'\r\n            label='Cementerio de Bogotá D.C.'\r\n            name='cementerioBogota'\r\n            initialValue={obj?.cementerioBogota}\r\n            rules={[{ required: true }]}\r\n          >\r\n            <SelectComponent options={l_cementerios} optionPropkey='RAZON_S' optionPropLabel='RAZON_S' />\r\n          </Form.Item>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation='right'>Datos del Cementerio a realizar la {tipoLicencia}</Divider>\r\n\r\n      <Form.Item\r\n        className='mb-4'\r\n        label='Lugar del cementerio'\r\n        name='cementerioLugar'\r\n        initialValue={obj?.isLugar() ?? 'Dentro de Bogotá'}\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Radio.Group onChange={onChangeLugarCementerio}>\r\n          <Radio value='Dentro de Bogotá'>DENTRO DE BOGOTÁ</Radio>\r\n          <br />\r\n          <Radio value='Fuera de Bogotá'>FUERA DE BOGOTÁ</Radio>\r\n          <br />\r\n          <Radio value='Fuera del País'>FUERA DEL PAÍS</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      {renderForm(lugar)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const KeysForm = [\r\n  'cementerioLugar',\r\n  'cementerioBogota',\r\n  'cementerioDepartamento',\r\n  'cementerioMunicipio',\r\n  'cementerioPais',\r\n  'cementerioCiudad'\r\n];\r\n\r\ninterface ICementerioInfoProps<T> extends ITipoLicencia {\r\n  form: FormInstance<T>;\r\n  obj: any;\r\n}\r\n\r\ntype TypeLugarCementerio = 'Dentro de Bogotá' | 'Fuera de Bogotá' | 'Fuera del País';\r\n"]}