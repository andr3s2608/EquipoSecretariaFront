{"version":3,"sources":["table.tsx"],"names":["antd_1","require","table_1","Apis_service_1","authprovider_util_1","react_1","model_1","icons_1","react_router_1","exports","Gridview","props","history","useHistory","data","_a","useState","isModalVisible","setIsModalVisible","_b","roles","setroles","accountIdentifier","authProvider","getAccount","api","ApiService","getListas","useCallback","__awaiter","GetRoles","mysRoles","sent","useEffect","structureColumns","title","dataIndex","key","render","React","createElement","FilePdfOutlined","style","fontSize","_","row","index","permiso","rol","Button","type","onClick","showModal","icon","EyeOutlined","Fragment","onClickValidarInformacion","marginLeft","CheckOutlined","idSolicitud","getLicencia","idTramite","localStorage","setItem","JSON","stringify","push","className","dataSource","columns","pagination","pageSize","Modal","visible","onCancel","width","okButtonProps","hidden","cancelText","dataFake","columnFake","hideOnSinglePage"],"mappings":"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","file":"table.min.js","sourcesContent":["import { Button, Modal } from 'antd';\r\nimport Table from 'antd/es/table';\r\nimport { IRoles } from 'app/Models/IRoles';\r\nimport { ApiService } from 'app/services/Apis.service';\r\nimport { authProvider } from 'app/shared/utils/authprovider.util';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { columnFake, dataFake } from './model';\r\nimport { CheckOutlined, EyeOutlined, FilePdfOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router';\r\n\r\ninterface IDataSource {\r\n  data: Array<any>;\r\n}\r\n\r\nexport const Gridview = (props: IDataSource) => {\r\n  const history = useHistory();\r\n  const { data } = props;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [roles, setroles] = useState<IRoles[]>([]);\r\n  const { accountIdentifier } = authProvider.getAccount();\r\n  const api = new ApiService(accountIdentifier);\r\n\r\n  const getListas = useCallback(\r\n    async () => {\r\n      const mysRoles = await api.GetRoles();\r\n      setroles(mysRoles);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  //const getMenu = UpdateMenu();\r\n\r\n  useEffect(() => {\r\n    getListas();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const structureColumns = [\r\n    {\r\n      title: 'Tipo Trámite',\r\n      dataIndex: 'tramite',\r\n      key: 'tramite'\r\n    },\r\n    {\r\n      title: 'Fecha Radicación',\r\n      dataIndex: 'fechaSolicitud',\r\n      key: 'fechaSolicitud'\r\n    },\r\n    {\r\n      title: 'Numero Licencia',\r\n      dataIndex: 'numeroCertificado',\r\n      key: 'numeroCertificado'\r\n    },\r\n\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'solicitud',\r\n      key: 'solicitud'\r\n    },\r\n    {\r\n      title: 'PDF',\r\n      dataIndex: 'pdf',\r\n      key: 'pdf',\r\n      render: () => <FilePdfOutlined style={{ fontSize: '30px' }} />\r\n    },\r\n    {\r\n      title: 'Acciones',\r\n      key: 'Acciones',\r\n\r\n      render: (_: any, row: any, index: any) => {\r\n        const [permiso] = roles;\r\n\r\n        return permiso.rol === 'Ciudadano' ? (\r\n          <Button key={index} type='primary' onClick={showModal} icon={<EyeOutlined />}>\r\n            Ver\r\n          </Button>\r\n        ) : permiso.rol === 'Funcionario' ? (\r\n          <>\r\n            <Button type='primary' key={`ver-${index}`} onClick={showModal} icon={<EyeOutlined />}>\r\n              Ver\r\n            </Button>\r\n\r\n            <Button\r\n              type='primary'\r\n              key={`vali-${index}`}\r\n              onClick={() => onClickValidarInformacion(row)}\r\n              style={{ marginLeft: '5px' }}\r\n              icon={<CheckOutlined />}\r\n            >\r\n              Validar Informacion\r\n            </Button>\r\n          </>\r\n        ) : null;\r\n      }\r\n    }\r\n  ];\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onClickValidarInformacion = async ({ idSolicitud }: { [x: string]: string }) => {\r\n    const data = await api.getLicencia(idSolicitud);\r\n    const { idTramite } = data[0];\r\n\r\n    localStorage.setItem('register', JSON.stringify(data));\r\n\r\n    switch (idTramite) {\r\n      case 'a289c362-e576-4962-962b-1c208afa0273':\r\n        //inhumacion indivual\r\n        history.push('/tramites-servicios/licencia/inhumacion-individual');\r\n        break;\r\n      case 'ad5ea0cb-1fa2-4933-a175-e93f2f8c0060':\r\n        //inhumacion fetal\r\n        history.push('/tramites-servicios/licencia/inhumacion-fetal');\r\n        break;\r\n      case 'e69bda86-2572-45db-90dc-b40be14fe020':\r\n        //cremacion individual\r\n        history.push('/tramites-servicios/licencia/cremacion-individual');\r\n        break;\r\n      case 'f4c4f874-1322-48ec-b8a8-3b0cac6fca8e':\r\n        //cremacionfetal\r\n        history.push('/tramites-servicios/licencia/cremacion-fetal');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='card card-body py-5 mb-4 fadeInTop'>\r\n      <div className='d-lg-flex align-items-start'>\r\n        <Table dataSource={data} columns={structureColumns} pagination={{ pageSize: 50 }} />\r\n      </div>\r\n      <Modal\r\n        title={<h3>Tabla de Seguimiento</h3>}\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        width={1000}\r\n        okButtonProps={{ hidden: true }}\r\n        cancelText='Cerrar'\r\n      >\r\n        <Table dataSource={dataFake} columns={columnFake} pagination={{ hideOnSinglePage: true }} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n"]}