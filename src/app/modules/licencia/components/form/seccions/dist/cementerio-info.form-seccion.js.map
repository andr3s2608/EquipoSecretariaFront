{"version":3,"sources":["cementerio-info.form-seccion.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAgE;AAEhE,OAAO;AACP,qCAAkD;AAClD,uCAAwD;AACxD,uCAAkC;AAClC,2CAAsC;AAKtC,cAAc;AACd,kFAAgF;AAEhF,YAAY;AACZ,gEAA8H;AAQjH,QAAA,yBAAyB,GAAwC,UAAC,KAAK;;IAC1E,IAAA,iBAAI,EAAE,iCAAY,CAAW;IAC7B,IAAA,eAAG,CAAW;IACtB,kBAAkB;IAEZ,IAAA;;;MAGJ,EAHK,mBAAW,EAAE,oBAGlB,CAAC;IAEG,IAAA,yBAA2D,EAA1D,oBAAY,EAAE,sBAA4C,CAAC;IAC5D,IAAA,mCAEL,EAFM,UAAmD,EAAlD,gCAAwB,EAAE,qBAAa,EAAE,gBAAQ,EAAG,iBAE3D,CAAC;IAEF,IAAM,SAAS,GAAG,mBAAW,CAC3B;;;;wBACe,qBAAM,OAAO,CAAC,GAAG,CAAC;wBAC7B,gCAAc,CAAC,0BAA0B,EAAE;wBAC3C,gCAAc,CAAC,sBAAsB,EAAE;wBACvC,gCAAc,CAAC,QAAQ,CAAC,8BAAY,CAAC,IAAI,CAAC;qBAC3C,CAAC,EAAA;;oBAJI,IAAI,GAAG,SAIX;oBACF,SAAS,CAAC,IAAI,CAAC,CAAC;;;;SACjB;IACD,uDAAuD;IACvD,EAAE,CACH,CAAC;IAEF,iBAAS,CAAC;QACR,SAAS,EAAE,CAAC;QACZ,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,YAAY;IACZ,iCAAiC;IACjC,IAAM,IAAI,GAAG,sCAAsC,CAAC;IACpD,IAAM,YAAY,GAAG,sCAAsC,CAAC;IAG5D,IAAM,eAAe,SAAG,GAAG,0CAAE,OAAO,EAAE,CAAC;IAEjC,IAAA,sCAAkE,EAAjE,aAAK,EAAE,gBAA0D,CAAC;IAGzE,IAAM,uBAAuB,GAAG,UAAC,CAAmB;QAClD,IAAI,CAAC,WAAW,CAAC,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,CAAC;QAC9H,cAAc,CAAC,EAAE,CAAC,CAAC;QACnB,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;IAEF,IAAM,oBAAoB,GAAG,UAAO,KAAa;;;;;oBAC/C,IAAI,CAAC,WAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBAC7B,qBAAM,gCAAc,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAA;;oBAAjE,IAAI,GAAG,SAA0D;oBACvE,cAAc,CAAC,IAAI,CAAC,CAAC;;;;SACtB,CAAC;IAEF,IAAM,iBAAiB,GAAG,UAAO,KAAa;;;YACtC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;YAEjE,YAAY,CAAC;gBACX,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;;;SACJ,CAAC;IAEF,YAAY;IAEZ,IAAM,UAAU,GAAG,UAAC,MAA2B;;QAC7C,QAAQ,MAAM,EAAE;YACd,KAAK,iBAAiB;gBACpB,OAAO,CACL,0CAAK,SAAS,EAAC,aAAa;oBAC1B,iCAAC,iBAAI,CAAC,IAAI,IAAC,KAAK,EAAC,0BAA0B,EAAC,IAAI,EAAC,wBAAwB,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACnG,YAAY,QAAE,GAAG,0CAAE,sBAAsB;wBACzC,iCAAC,kCAAe,IACd,OAAO,EAAE,wBAAwB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,KAAK,aAAa,EAA/B,CAA+B,CAAC,EAChF,aAAa,EAAC,aAAa,EAC3B,eAAe,EAAC,aAAa,EAC7B,QAAQ,EAAE,oBAAoB,GAC9B,CACQ;oBACZ,iCAAC,iBAAI,CAAC,IAAI,IAAC,KAAK,EAAC,WAAW,EAAC,IAAI,EAAC,qBAAqB,EACrD,YAAY,QAAE,GAAG,0CAAE,mBAAmB,EACtC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;wBAC3B,iCAAC,kCAAe,IACd,OAAO,EAAE,YAAY,EACrB,aAAa,EAAC,aAAa,EAC3B,QAAQ,EAAE,iBAAiB,EAC3B,eAAe,EAAC,aAAa,GAC7B,CACQ;oBACX,WAAW,CAAC,WAAW,KAAK,YAAY,IAAI,WAAW,CAAC,SAAS,KAAK,IAAI,IAAI,CAC7E,iCAAC,iBAAI,CAAC,IAAI,IAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACnE,YAAY,QAAE,GAAG,0CAAE,IAAI;wBAEvB,iCAAC,kBAAK,IAAC,UAAU,QAAC,WAAW,EAAC,YAAY,EAAC,YAAY,EAAC,KAAK,GAAG,CACtD,CACb,CACG,CACP,CAAC;YAEJ,KAAK,gBAAgB;gBACnB,OAAO,CACL,0CAAK,SAAS,EAAC,aAAa;oBAC1B,iCAAC,iBAAI,CAAC,IAAI,IAAC,KAAK,EAAC,WAAM,EAAC,IAAI,EAAC,gBAAgB,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACvE,YAAY,QAAE,GAAG,0CAAE,cAAc;wBAEjC,iCAAC,kCAAe,IACd,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,KAAK,UAAU,EAA5B,CAA4B,CAAC,EAC7D,aAAa,EAAC,eAAe,EAC7B,eAAe,EAAC,aAAa,GAC7B,CACQ;oBACZ,iCAAC,iBAAI,CAAC,IAAI,IAAC,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,kBAAkB,EAC/C,YAAY,QAAE,GAAG,0CAAE,gBAAgB,EACnC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;wBAC3B,iCAAC,kBAAK,IAAC,UAAU,QAAC,WAAW,EAAC,QAAQ,EAAC,YAAY,EAAC,KAAK,GAAG,CAClD,CACR,CACP,CAAC;YAEJ;gBACE,OAAO,CACL,iCAAC,iBAAI,CAAC,IAAI,IACR,SAAS,EAAC,aAAa,EACvB,KAAK,EAAC,gCAA2B,EACjC,IAAI,EAAC,kBAAkB,EACvB,YAAY,QAAE,GAAG,0CAAE,gBAAgB,EACnC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBAE3B,iCAAC,kCAAe,IAAC,OAAO,EAAE,aAAa,EAAE,aAAa,EAAC,SAAS,EAAC,eAAe,EAAC,SAAS,GAAG,CACnF,CACb,CAAC;SACL;IACH,CAAC,CAAC;IAEF,OAAO,CACL;QACE,iCAAC,oBAAO,IAAC,WAAW,EAAC,OAAO;;YAAqC,YAAY,CAAW;QAExF,iCAAC,iBAAI,CAAC,IAAI,IACR,SAAS,EAAC,MAAM,EAChB,KAAK,EAAC,sBAAsB,EAC5B,IAAI,EAAC,iBAAiB,EACtB,YAAY,cAAE,GAAG,0CAAE,OAAO,yCAAM,kBAAkB,IAClD,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAE3B,iCAAC,kBAAK,CAAC,KAAK,IAAC,QAAQ,EAAE,uBAAuB;gBAC5C,iCAAC,kBAAK,IAAC,KAAK,EAAC,uBAAkB,4BAAyB;gBACxD,4CAAM;gBACN,iCAAC,kBAAK,IAAC,KAAK,EAAC,sBAAiB,2BAAwB;gBACtD,4CAAM;gBACN,iCAAC,kBAAK,IAAC,KAAK,EAAC,qBAAgB,0BAAuB,CACxC,CACJ;QAEX,UAAU,CAAC,KAAK,CAAC,CACjB,CACJ,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,QAAQ,GAAG;IACtB,iBAAiB;IACjB,kBAAkB;IAClB,wBAAwB;IACxB,qBAAqB;IACrB,gBAAgB;IAChB,kBAAkB;CACnB,CAAC","file":"cementerio-info.form-seccion.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\n// Antd\r\nimport Form, { FormInstance } from 'antd/es/form';\r\nimport Radio, { RadioChangeEvent } from 'antd/es/radio';\r\nimport Input from 'antd/es/input';\r\nimport Divider from 'antd/es/divider';\r\n\r\n// Utilidades\r\nimport { ITipoLicencia } from 'app/shared/utils/types.util';\r\n\r\n// Componentes\r\nimport { SelectComponent } from 'app/shared/components/inputs/select.component';\r\n\r\n// Servicios\r\nimport { dominioService, ETipoDominio, IDepartamento, IMunicipio, IDominio, ICementerio } from 'app/services/dominio.service';\r\nimport { validateClaimsRequest } from 'msal/lib-commonjs/AuthenticationParameters';\r\n\r\ninterface municiopioDepartament {\r\n  municipio: string;\r\n  departament: string;\r\n}\r\n\r\nexport const CementerioInfoFormSeccion: React.FC<ICementerioInfoProps<any>> = (props) => {\r\n  const { form, tipoLicencia } = props;\r\n  const { obj } = props;\r\n  //#region Listados\r\n\r\n  const [isMunicipio, setMunicipio] = useState<municiopioDepartament>({\r\n    municipio: '',\r\n    departament: ''\r\n  });\r\n\r\n  const [l_municipios, setLMunicipios] = useState<IMunicipio[]>([]);\r\n  const [[l_departamentos_colombia, l_cementerios, l_paises], setListas] = useState<[IDepartamento[], ICementerio[], IDominio[]]>(\r\n    [[], [], []]\r\n  );\r\n\r\n  const getListas = useCallback(\r\n    async () => {\r\n      const resp = await Promise.all([\r\n        dominioService.get_departamentos_colombia(),\r\n        dominioService.get_cementerios_bogota(),\r\n        dominioService.get_type(ETipoDominio.Pais)\r\n      ]);\r\n      setListas(resp);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getListas();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //#endregion\r\n  //#region Acciones del formulario\r\n  const cota = 'b5c40416-db96-4d1d-a5bd-da0ce61930e7';\r\n  const cundinamarca = '1029c7b3-e8c7-46e6-8275-3e568e06e03c';\r\n\r\n\r\n  const lugarCementerio = obj?.isLugar();\r\n\r\n  const [lugar, setLugar] = useState<TypeLugarCementerio>(lugarCementerio);\r\n\r\n\r\n  const onChangeLugarCementerio = (e: RadioChangeEvent) => {\r\n    form.resetFields(['cementerioBogota', 'cementerioDepartamento', 'cementerioMunicipio', 'cementerioPais', 'cementerioCiudad']);\r\n    setLMunicipios([]);\r\n    setLugar(e.target.value);\r\n  };\r\n\r\n  const onChangeDepartamento = async (value: string) => {\r\n    form.resetFields(['cementerioMunicipio']);\r\n    const resp = await dominioService.get_municipios_by_departamento(value);\r\n    setLMunicipios(resp);\r\n  };\r\n\r\n  const onChangeMunicipio = async (value: string) => {\r\n    const departament = form.getFieldValue('cementerioDepartamento');\r\n\r\n    setMunicipio({\r\n      departament: departament,\r\n      municipio: value\r\n    });\r\n  };\r\n\r\n  //#endregion\r\n\r\n  const renderForm = (_lugar: TypeLugarCementerio) => {\r\n    switch (_lugar) {\r\n      case 'Fuera de Bogotá':\r\n        return (\r\n          <div className='fadeInRight'>\r\n            <Form.Item label='Departamento de Colombia' name='cementerioDepartamento' rules={[{ required: true }]}\r\n              initialValue={obj?.cementerioDepartamento}>\r\n              <SelectComponent\r\n                options={l_departamentos_colombia.filter((i) => i.descripcion !== 'BOGOTÁ D.C.')}\r\n                optionPropkey='descripcion'\r\n                optionPropLabel='descripcion'\r\n                onChange={onChangeDepartamento}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label='Municipio' name='cementerioMunicipio'\r\n              initialValue={obj?.cementerioMunicipio}\r\n              rules={[{ required: true }]}>\r\n              <SelectComponent\r\n                options={l_municipios}\r\n                optionPropkey='descripcion'\r\n                onChange={onChangeMunicipio}\r\n                optionPropLabel='descripcion'\r\n              />\r\n            </Form.Item>\r\n            {isMunicipio.departament === cundinamarca && isMunicipio.municipio === cota && (\r\n              <Form.Item label='Otro sitio' name='otro' rules={[{ required: true }]}\r\n                initialValue={obj?.otro}\r\n              >\r\n                <Input allowClear placeholder='Otro Sitio' autoComplete='off' />\r\n              </Form.Item>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'Fuera del País':\r\n        return (\r\n          <div className='fadeInRight'>\r\n            <Form.Item label='País' name='cementerioPais' rules={[{ required: true }]}\r\n              initialValue={obj?.cementerioPais}\r\n            >\r\n              <SelectComponent\r\n                options={l_paises.filter((i) => i.descripcion !== 'Colombia')}\r\n                optionPropkey='descripcion  '\r\n                optionPropLabel='descripcion'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label='Ciudad' name='cementerioCiudad'\r\n              initialValue={obj?.cementerioCiudad}\r\n              rules={[{ required: true }]}>\r\n              <Input allowClear placeholder='Ciudad' autoComplete='off' />\r\n            </Form.Item>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <Form.Item\r\n            className='fadeInRight'\r\n            label='Cementerio de Bogotá D.C.'\r\n            name='cementerioBogota'\r\n            initialValue={obj?.cementerioBogota}\r\n            rules={[{ required: true }]}\r\n          >\r\n            <SelectComponent options={l_cementerios} optionPropkey='RAZON_S' optionPropLabel='RAZON_S' />\r\n          </Form.Item>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation='right'>Datos del Cementerio a realizar la {tipoLicencia}</Divider>\r\n\r\n      <Form.Item\r\n        className='mb-4'\r\n        label='Lugar del cementerio'\r\n        name='cementerioLugar'\r\n        initialValue={obj?.isLugar() ?? 'Dentro de Bogotá'}\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Radio.Group onChange={onChangeLugarCementerio}>\r\n          <Radio value='Dentro de Bogotá'>DENTRO DE BOGOTÁ</Radio>\r\n          <br />\r\n          <Radio value='Fuera de Bogotá'>FUERA DE BOGOTÁ</Radio>\r\n          <br />\r\n          <Radio value='Fuera del País'>FUERA DEL PAÍS</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      {renderForm(lugar)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const KeysForm = [\r\n  'cementerioLugar',\r\n  'cementerioBogota',\r\n  'cementerioDepartamento',\r\n  'cementerioMunicipio',\r\n  'cementerioPais',\r\n  'cementerioCiudad'\r\n];\r\n\r\ninterface ICementerioInfoProps<T> extends ITipoLicencia {\r\n  form: FormInstance<T>;\r\n  obj: any;\r\n}\r\n\r\ntype TypeLugarCementerio = 'Dentro de Bogotá' | 'Fuera de Bogotá' | 'Fuera del País';\r\n"]}